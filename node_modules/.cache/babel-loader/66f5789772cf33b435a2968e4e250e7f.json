{"ast":null,"code":"var _jsxFileName = \"/Users/mehel-ka/Desktop/Hypertube/src/container/Chat/Chat.jsx\";\nimport React, { useEffect, useState } from 'react'; // import { useSelector, useDispatch } from 'react-redux';\n// import * as actions from '../../store/actions/index';\n// import {Modal} from 'react-bootstrap'\n\nimport './Chat.css';\nimport N from '../../assets/images/netflix-logo.png'; // import { Widget } from 'react-chat-widget';\n\nimport io from 'socket.io-client';\nimport { Widget } from 'react-chat-widget';\nimport 'react-chat-widget/lib/styles.css';\n\nconst Chat = () => {\n  // const [name,setName] = useState('')\n  // const [room,setRoom] = useState('')\n  useEffect(() => {//instauration de la connexion\n    // const socket = io(\"http://localhost:3000\")\n    // socket.emit('join',{name:localStorage.getItem('name')},()=>{\n    // })\n    // console.log(socket)\n    // return () => {\n    //         socket.emit('disconnect')\n    //         socket.off();\n    // }\n    //     // else if (localStorage.getItem('leaveCommunity')){\n    //     //     socket.emit('LeaveCommunity')\n    //     //     socket.off();\n    //     // }\n    //}\n  }, []);\n\n  const handleNewUserMessage = newMessage => {\n    console.log(`New message incoming! ${newMessage}`); // Now send the message throught the backend API\n  };\n\n  let chat;\n\n  if (localStorage.hasOwnProperty('toolbar')) {\n    chat = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(Widget, {\n      title: \"Netflix Chat\",\n      subtitle: \"Have fun\",\n      profileAvatar: N,\n      handleNewUserMessage: handleNewUserMessage,\n      senderPlaceHolder: \"ecrire un message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, chat);\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/mehel-ka/Desktop/Hypertube/src/container/Chat/Chat.jsx"],"names":["React","useEffect","useState","N","io","Widget","Chat","handleNewUserMessage","newMessage","console","log","chat","localStorage","hasOwnProperty"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;AACA;AACA;;AACA,OAAO,YAAP;AACA,OAAOC,CAAP,MAAc,sCAAd,C,CACA;;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAO,kCAAP;;AAIA,MAAMC,IAAI,GAAG,MAAM;AAEf;AACA;AAEAL,EAAAA,SAAS,CAAE,MAAI,CACX;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAED;AACF,GAjBQ,EAiBP,EAjBO,CAAT;;AAoBA,QAAMM,oBAAoB,GAAIC,UAAD,IAAgB;AACzCC,IAAAA,OAAO,CAACC,GAAR,CAAa,yBAAwBF,UAAW,EAAhD,EADyC,CAEzC;AAED,GAJH;;AAMA,MAAIG,IAAJ;;AACA,MAAIC,YAAY,CAACC,cAAb,CAA4B,SAA5B,CAAJ,EAA2C;AACvCF,IAAAA,IAAI,gBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACT,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,cAAd;AAA8B,MAAA,QAAQ,EAAC,UAAvC;AAAkD,MAAA,aAAa,EAAER,CAAjE;AAAoE,MAAA,oBAAoB,EAAEI,oBAA1F;AAAgH,MAAA,iBAAiB,EAAC,mBAAlI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADS,CAAT;AAGH;;AAED,sBACA,0CACII,IADJ,CADA;AAMH,CA5CD;;AAgDA,eAAeL,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n// import { useSelector, useDispatch } from 'react-redux';\n// import * as actions from '../../store/actions/index';\n// import {Modal} from 'react-bootstrap'\nimport './Chat.css';\nimport N from '../../assets/images/netflix-logo.png';\n// import { Widget } from 'react-chat-widget';\nimport io from 'socket.io-client'\nimport { Widget } from 'react-chat-widget';\nimport 'react-chat-widget/lib/styles.css';\n\n\n\nconst Chat = () => {\n\n    // const [name,setName] = useState('')\n    // const [room,setRoom] = useState('')\n\n    useEffect (()=>{\n        //instauration de la connexion\n        // const socket = io(\"http://localhost:3000\")\n        // socket.emit('join',{name:localStorage.getItem('name')},()=>{\n\n        // })\n        // console.log(socket)\n        // return () => {\n        //         socket.emit('disconnect')\n        //         socket.off();\n        // }\n        //     // else if (localStorage.getItem('leaveCommunity')){\n        //     //     socket.emit('LeaveCommunity')\n        //     //     socket.off();\n        //     // }\n            \n       //}\n    },[])\n\n  \n    const handleNewUserMessage = (newMessage) => {\n        console.log(`New message incoming! ${newMessage}`);\n        // Now send the message throught the backend API\n  \n      };\n\n    let chat;\n    if (localStorage.hasOwnProperty('toolbar')){\n        chat = ( <div >\n        <Widget title=\"Netflix Chat\"  subtitle=\"Have fun\" profileAvatar={N} handleNewUserMessage={handleNewUserMessage} senderPlaceHolder=\"ecrire un message\" />\n         </div>)\n    }\n\n    return(\n    <>\n       {chat}\n    </>\n    )\n\n}\n\n\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}