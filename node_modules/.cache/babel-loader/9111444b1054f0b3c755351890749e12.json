{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nimport firebase from '../../fire';\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: token,\n    userId: userId\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const modalFalse = () => {\n  return {\n    type: actionTypes.MODAL_FALSE\n  };\n};\nexport const authLogout = () => {\n  localStorage.removeItem('id');\n  localStorage.removeItem('token');\n  localStorage.removeItem('name');\n  localStorage.removeItem('mail');\n  localStorage.removeItem('photo');\n  localStorage.removeItem('email');\n  localStorage.removeItem('social');\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(authLogout());\n    }, expirationTime * 100000000000);\n  };\n};\nexport const socialTwitter = (provider, history) => {\n  return dispatch => {\n    dispatch(authStart());\n    firebase.auth().signInWithPopup(provider).then(response => {\n      //console.log('socailllAUUUUTHHHHH',response)\n      //console.log('33',response.user)\n      localStorage.setItem('id', response.user.uid);\n      localStorage.setItem('token', response.credential.accessToken);\n      localStorage.setItem('name', response.user.displayName);\n      localStorage.setItem('photo', response.additionalUserInfo.profile.profile_image_url);\n      localStorage.setItem('email', response.user.email);\n      localStorage.setItem('show', true);\n      localStorage.setItem('animation', true); //localStorage.setItem('toolbar', true)\n\n      dispatch(authSuccess(response.credential.idToken, response.user.uid));\n      history.push('/home');\n    }).catch(err => {\n      //console.log('eerrrr msg = ', err.message)\n      dispatch(authFail(err.message));\n    });\n  };\n};\nexport const socialAuth = (provider, history) => {\n  return dispatch => {\n    dispatch(authStart());\n    firebase.auth().signInWithPopup(provider).then(response => {\n      console.log('socailllAUUUUTHHHHH', response);\n      console.log('33', response.user);\n      localStorage.setItem('id', response.user.uid);\n      localStorage.setItem('token', response.credential.accessToken);\n      localStorage.setItem('name', response.user.displayName);\n      localStorage.setItem('photo', response.user.photoURL);\n      localStorage.setItem('email', response.user.email);\n      localStorage.setItem('show', true);\n      localStorage.setItem('animation', true); //localStorage.setItem('toolbar', true)\n\n      dispatch(authSuccess(response.credential.idToken, response.user.uid));\n      history.push('/home');\n    }).catch(err => {\n      console.log('eerrrr msg = ', err.message);\n      dispatch(authFail(err.message));\n    });\n  };\n};\nexport const auth = (email, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDJQ2C-WHsJXu5xVCG5Z98XQ31gRJrSV_E', authData).then(response => {\n      console.log('tokkkennnnnn', response);\n      localStorage.setItem('id', response.data.localId);\n      localStorage.setItem('show', true);\n      localStorage.setItem('animation', true); //localStorage.setItem('toolbar', true) \n\n      dispatch(authSuccess(null, response.data.localId));\n    }).catch(err => {\n      console.log(err.response);\n      dispatch(authFail(err.response.data.error.message));\n    });\n  };\n};\nexport const authLog = (email, password, history) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDJQ2C-WHsJXu5xVCG5Z98XQ31gRJrSV_E', authData).then(response => {\n      console.log('authlogAction', response);\n      localStorage.setItem('mail', response.data.email);\n      localStorage.setItem('social', false);\n      localStorage.setItem('token', response.data.idToken);\n      localStorage.setItem('id', response.data.localId);\n      localStorage.setItem('show', true);\n      localStorage.setItem('animation', true); //localStorage.setItem('toolbar', true)\n\n      dispatch(authSuccess(response.data.idToken, response.data.localId));\n      dispatch(checkAuthTimeout(response.data.expiresIn));\n      history.push('/home');\n    }).catch(err => {\n      dispatch(authFail(err.response.data.error.message));\n    }); // const verify = {\n    //     requestType:\"VERIFY_EMAIL\",\n    //     idToken:localStorage.getItem('token')\n    // }\n    // console.log('verifier',verify)\n    // axios.post('https://identitytoolkit.googleapis.com/v1/accounts:sendOobCode?key=AIzaSyDJQ2C-WHsJXu5xVCG5Z98XQ31gRJrSV_E',verify)\n    // .then(e=>{ console.log(e)})\n    // .catch(e=>{console.log(e)})\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    localStorage.removeItem('show'); // localStorage.removeItem('animation');\n    // localStorage.removeItem('toolbar')\n\n    const token = localStorage.getItem('token');\n    const id = localStorage.getItem('id');\n    if (!token) dispatch(authLogout());else dispatch(authSuccess(token, id));\n  };\n};","map":{"version":3,"sources":["/Users/mehel-ka/netflix/src/store/actions/auth.js"],"names":["actionTypes","axios","firebase","authStart","type","AUTH_START","authSuccess","token","userId","AUTH_SUCCESS","idToken","authFail","error","AUTH_FAIL","modalFalse","MODAL_FALSE","authLogout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","socialTwitter","provider","history","auth","signInWithPopup","then","response","setItem","user","uid","credential","accessToken","displayName","additionalUserInfo","profile","profile_image_url","email","push","catch","err","message","socialAuth","console","log","photoURL","password","authData","returnSecureToken","post","data","localId","authLog","expiresIn","authCheckState","getItem","id"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nimport firebase from '../../fire'\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    };\n};\nexport const authSuccess = (token, userId) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        idToken: token,\n        userId: userId\n    };\n};\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    };\n};\n\nexport const modalFalse = () =>{\n    return {\n        type: actionTypes.MODAL_FALSE,\n    }\n}\n\nexport const authLogout = () => {\n    localStorage.removeItem('id')\n    localStorage.removeItem('token')\n    localStorage.removeItem('name')\n    localStorage.removeItem('mail')\n    localStorage.removeItem('photo')\n    localStorage.removeItem('email')\n    localStorage.removeItem('social')\n    return {\n        type: actionTypes.AUTH_LOGOUT,\n\n    }\n}\n\nexport const checkAuthTimeout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(()=>{\n            dispatch(authLogout())\n        },expirationTime*100000000000)\n    }\n}\n\nexport const socialTwitter = (provider,history) => {\n    return dispatch => {\n        dispatch(authStart());\n        firebase.auth().signInWithPopup(provider)\n        .then(response => {\n            //console.log('socailllAUUUUTHHHHH',response)\n            //console.log('33',response.user)\n            localStorage.setItem('id', response.user.uid)\n            localStorage.setItem('token', response.credential.accessToken)\n            localStorage.setItem('name', response.user.displayName)\n            localStorage.setItem('photo', response.additionalUserInfo.profile.profile_image_url)\n            localStorage.setItem('email', response.user.email)\n            localStorage.setItem('show', true)\n            localStorage.setItem('animation', true)\n            //localStorage.setItem('toolbar', true)\n            dispatch(authSuccess(response.credential.idToken, response.user.uid));\n            history.push('/home');\n        })\n        .catch(err => {\n            //console.log('eerrrr msg = ', err.message)\n            dispatch(authFail(err.message));\n        })\n    };\n}\n\nexport const socialAuth = (provider,history) => {\n    return dispatch => {\n        dispatch(authStart());\n        firebase.auth().signInWithPopup(provider)\n        .then(response => {\n            console.log('socailllAUUUUTHHHHH',response)\n            console.log('33',response.user)\n            localStorage.setItem('id', response.user.uid)\n            localStorage.setItem('token', response.credential.accessToken)\n            localStorage.setItem('name', response.user.displayName)\n            localStorage.setItem('photo', response.user.photoURL)\n            localStorage.setItem('email', response.user.email)\n            localStorage.setItem('show', true)\n            localStorage.setItem('animation', true)\n            //localStorage.setItem('toolbar', true)\n            dispatch(authSuccess(response.credential.idToken, response.user.uid));\n           history.push('/home'); \n        })\n        .catch(err => {\n            console.log('eerrrr msg = ', err.message)\n            dispatch(authFail(err.message));\n        })\n    };\n}\n\nexport const auth = (email, password) => {\n    return dispatch => {\n        dispatch(authStart());\n        const authData = {\n            email: email,\n            password: password,\n            returnSecureToken: true\n        };\n        axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDJQ2C-WHsJXu5xVCG5Z98XQ31gRJrSV_E',authData)\n        .then(response => {\n            console.log('tokkkennnnnn',response);\n            localStorage.setItem('id', response.data.localId)\n            localStorage.setItem('show', true)\n            localStorage.setItem('animation', true)\n            //localStorage.setItem('toolbar', true) \n            dispatch(authSuccess(null, response.data.localId));\n        })\n        .catch(err => {\n            console.log(err.response)\n            dispatch(authFail(err.response.data.error.message));\n        })\n    };\n};\n\nexport const  authLog = (email, password, history) => {\n    return dispatch => {\n        dispatch(authStart());\n        const authData = {\n            email: email,\n            password: password,\n            returnSecureToken: true\n        };\n     \n       axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDJQ2C-WHsJXu5xVCG5Z98XQ31gRJrSV_E', authData)\n        .then(response => {\n            console.log('authlogAction',response);\n            localStorage.setItem('mail',response.data.email);\n            localStorage.setItem('social',false)\n            localStorage.setItem('token', response.data.idToken)\n            localStorage.setItem('id', response.data.localId)\n            localStorage.setItem('show', true)\n            localStorage.setItem('animation', true)\n            //localStorage.setItem('toolbar', true)\n            dispatch(authSuccess(response.data.idToken, response.data.localId));\n            dispatch(checkAuthTimeout(response.data.expiresIn))  \n             \n            history.push('/home');\n        })\n        .catch(err => {\n            dispatch(authFail(err.response.data.error.message));\n        })\n\n        // const verify = {\n        //     requestType:\"VERIFY_EMAIL\",\n        //     idToken:localStorage.getItem('token')\n        // }\n        // console.log('verifier',verify)\n        // axios.post('https://identitytoolkit.googleapis.com/v1/accounts:sendOobCode?key=AIzaSyDJQ2C-WHsJXu5xVCG5Z98XQ31gRJrSV_E',verify)\n        // .then(e=>{ console.log(e)})\n        // .catch(e=>{console.log(e)})\n    };\n};\n\nexport const authCheckState = () => {\n    return (dispatch) => {\n        localStorage.removeItem('show')\n        // localStorage.removeItem('animation');\n       // localStorage.removeItem('toolbar')\n     \n        const token = localStorage.getItem('token');\n        const id = localStorage.getItem('id')\n        if (!token)\n            dispatch(authLogout());\n           \n        else\n            dispatch(authSuccess(token,id));        \n    };\n};\n"]},"metadata":{},"sourceType":"module"}