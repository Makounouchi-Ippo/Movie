{"ast":null,"code":"var _jsxFileName = \"/Users/mehel-ka/netflix/src/container/Home/ButtonSelect/ButtonSelect.js\";\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions/index';\nimport classes from './ButtonSelect.css';\nconst Genre = [{\n  value: '28',\n  label: 'Action'\n}, {\n  value: '16',\n  label: 'Animation'\n}, {\n  value: '12',\n  label: 'Aventure'\n}, {\n  value: '35',\n  label: 'Comédie'\n}, {\n  value: '80',\n  label: 'Crime'\n}, {\n  value: '99',\n  label: 'Documentaire'\n}, {\n  value: '18',\n  label: 'Drame'\n}, {\n  value: '10751',\n  label: 'Familial'\n}, {\n  value: '14',\n  label: 'Fantastique'\n}, {\n  value: '36',\n  label: 'Histoire'\n}, {\n  value: '27',\n  label: 'Horreur'\n}, {\n  value: '10402',\n  label: 'Musique'\n}, {\n  value: '9648',\n  label: 'Mystére'\n}, {\n  value: '10749',\n  label: 'Romance'\n}, {\n  value: '878',\n  label: 'Science-fiction'\n}, {\n  value: '10770',\n  label: 'Téléfilm'\n}, {\n  value: '53',\n  label: 'Thriller'\n}, {\n  value: '10752',\n  label: 'Guerre'\n}, {\n  value: '37',\n  label: 'Western'\n}];\nconst SortBy = [{\n  value: 'popularity.desc',\n  label: 'Popularité descendante'\n}, {\n  value: 'popularity.asc',\n  label: 'Popularité ascendante'\n}, {\n  value: 'vote_average.desc',\n  label: 'Note descendante'\n}, {\n  value: 'vote_average.asc',\n  label: 'Note ascendante'\n}];\nconst Years = [];\n\nfor (let i = 1950; i <= 2020; i++) Years.push({\n  value: i,\n  label: i\n});\n\nclass ButtonSelect extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedOption: {\n        Genre: {\n          value: null,\n          label: 'Genre'\n        },\n        Years: {\n          value: null,\n          label: 'Years'\n        },\n        SortBy: {\n          value: null,\n          label: 'SortBy'\n        }\n      }\n    };\n\n    this.handleInput = (value, id) => {\n      let copy = { ...this.state.selectedOption\n      };\n      copy[id] = value;\n      this.setState({\n        selectedOption: copy\n      }, () => {\n        this.props.clearMovie();\n        this.props.pageInitial();\n        this.props.movieFiltres(this.state.selectedOption);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      selectedOption: this.props.selectedOption\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.inputValue !== prevProps.inputValue) {\n      this.setState({\n        selectedOption: {\n          Genre: {\n            value: null,\n            label: 'Genre'\n          },\n          Years: {\n            value: null,\n            label: 'Years'\n          },\n          SortBy: {\n            value: null,\n            label: 'SortBy'\n          }\n        }\n      });\n    }\n  }\n\n  render() {\n    // let text;\n    // if (this.props.selectedOption.Genre.value !==null || this.props.selectedOption.SortBy.value !==null  || this.props.selectedOption.Years.value !==null ){\n    //     text =(<p> tttttttt </p>)\n    // }\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: '50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"blockButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '230px',\n        margin: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      options: Genre,\n      isSearchable: false,\n      placeholder: \"Genre\",\n      value: this.state.selectedOption.Genre,\n      onChange: value => this.handleInput(value, 'Genre'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '230px',\n        margin: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      options: SortBy,\n      isSearchable: false,\n      placeholder: \"Trier par\",\n      value: this.state.selectedOption.SortBy,\n      onChange: value => this.handleInput(value, 'SortBy'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '230px',\n        margin: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      options: Years,\n      isSearchable: false,\n      placeholder: \"Annees\",\n      value: this.state.selectedOption.Years,\n      onChange: value => this.handleInput(value, 'Years'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    inputValue: state.movie.inputValue,\n    selectedOption: state.movie.selectedOption\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    movieFiltres: value => dispatch(actions.movieFiltres(value)),\n    clearMovie: () => dispatch(actions.clearMovie()),\n    pageInitial: () => dispatch(actions.pageInitial())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ButtonSelect));","map":{"version":3,"sources":["/Users/mehel-ka/netflix/src/container/Home/ButtonSelect/ButtonSelect.js"],"names":["React","Component","Select","withRouter","connect","actions","classes","Genre","value","label","SortBy","Years","i","push","ButtonSelect","state","selectedOption","handleInput","id","copy","setState","props","clearMovie","pageInitial","movieFiltres","componentDidMount","componentDidUpdate","prevProps","inputValue","render","marginTop","width","margin","mapStateToProps","movie","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Select from 'react-select';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions/index'\nimport classes from './ButtonSelect.css'\n\nconst Genre = [\n    { value: '28', label: 'Action'},\n    { value: '16', label: 'Animation'},\n    { value: '12', label: 'Aventure' },\n    { value: '35', label: 'Comédie' },\n    { value: '80', label: 'Crime' },\n    { value: '99', label: 'Documentaire' },\n    { value: '18', label: 'Drame' },\n    { value: '10751', label: 'Familial' },\n    { value: '14', label: 'Fantastique' },\n    { value: '36', label: 'Histoire' },\n    { value: '27', label: 'Horreur' },\n    { value: '10402', label: 'Musique' },\n    { value: '9648', label: 'Mystére'},\n    { value: '10749', label: 'Romance' },\n    { value: '878', label: 'Science-fiction' },\n    { value: '10770', label: 'Téléfilm' },\n    { value: '53', label: 'Thriller' },\n    { value: '10752', label: 'Guerre' },\n    { value: '37', label: 'Western'},\n  ];\n  const SortBy = [\n    { value: 'popularity.desc', label: 'Popularité descendante' },\n    { value: 'popularity.asc', label: 'Popularité ascendante' },\n    { value: 'vote_average.desc', label: 'Note descendante'},\n    { value: 'vote_average.asc', label: 'Note ascendante' },\n  ];\n  const Years = [];\n    for (let i = 1950; i <= 2020; i++)\n       Years.push({ value: i, label: i });\n\n\nclass ButtonSelect extends Component{\n\n    state={\n        selectedOption: {\n            Genre: {value: null, label: 'Genre'}, \n            Years: {value: null , label:'Years'},\n            SortBy: {value: null, label: 'SortBy'}\n        }\n    }\n\n    componentDidMount () {\n        this.setState({selectedOption : this.props.selectedOption})\n        \n    }\n\n    componentDidUpdate (prevProps) {\n        if (this.props.inputValue !== prevProps.inputValue)\n         \n\n        {this.setState({selectedOption:{ Genre: {value: null, label: 'Genre'}, Years: {value: null , label: 'Years'},SortBy: {value: null, label: 'SortBy'}}})}}\n\n\n    handleInput = (value,id) => {\n        let copy = {...this.state.selectedOption}\n        copy[id] = value \n       this.setState({selectedOption:copy}, () => {\n           \n        this.props.clearMovie();\n        this.props.pageInitial()\n           this.props.movieFiltres(this.state.selectedOption)\n       }) \n    }\n\n    \n\n    render() {\n\n        // let text;\n        \n        // if (this.props.selectedOption.Genre.value !==null || this.props.selectedOption.SortBy.value !==null  || this.props.selectedOption.Years.value !==null ){\n        //     text =(<p> tttttttt </p>)\n        // }\n\n        return (\n            <div style={{marginTop:'50px'}}> \n                <div className='blockButton'>\n                    <div style={{width:'230px', margin:'20px'}}>\n                        <Select options={Genre} \n                            isSearchable={false}\n                            placeholder='Genre'\n                            value={this.state.selectedOption.Genre}\n                            onChange={(value) => this.handleInput(value, 'Genre')}\n                        />\n                    </div> \n                    <div style={{width:'230px', margin:'20px'}}>\n                        <Select options={SortBy} \n                            isSearchable={false}\n                            placeholder='Trier par'\n                            value={this.state.selectedOption.SortBy}\n                            onChange={(value) => this.handleInput(value, 'SortBy')}\n                        />\n                    </div> \n                    <div style={{width:'230px', margin:'20px'}}>\n                        <Select options={Years} \n                            isSearchable={false}\n                            placeholder='Annees'\n                            value={this.state.selectedOption.Years}\n                            onChange={(value) => this.handleInput(value, 'Years')}\n                        />\n                    </div>\n                </div>\n                {/* <div>\n                    {text}\n                </div> */}\n          </div>\n\n        )\n\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        inputValue: state.movie.inputValue,\n        selectedOption: state.movie.selectedOption\n    };\n  };\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      movieFiltres: (value) => dispatch(actions.movieFiltres(value)), \n      clearMovie: () => dispatch(actions.clearMovie()),\n      pageInitial:() =>  dispatch(actions.pageInitial())\n    };\n  };\n  \n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps) (ButtonSelect));\n"]},"metadata":{},"sourceType":"module"}