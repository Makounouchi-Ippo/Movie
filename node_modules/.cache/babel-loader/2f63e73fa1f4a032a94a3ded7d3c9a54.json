{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nconst initialState = {\n  token: null,\n  userId: null,\n  error: null,\n  loading: false,\n  modal: false,\n  photo: null,\n  toolbar: false,\n  tchat: false\n};\n\nconst authStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst authSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.idToken,\n    userId: action.userId,\n    error: null,\n    loading: false,\n    modal: true\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst authLogout = state => {\n  return updateObject(state, {\n    token: null,\n    userId: null\n  });\n};\n\nconst tchat = (state, action) => {\n  return updateObject(state, {\n    tchat: action.value\n  });\n};\n\nconst toolbar = (state, action) => {\n  return updateObject(state, {\n    toolbar: action.toolbar\n  });\n};\n\nconst photo = (state, action) => {\n  return updateObject(state, {\n    photo: action.photo\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state);\n\n    case actionTypes.PHOTO:\n      return photo(state, action);\n\n    case actionTypes.TOOLBAR:\n      return toolbar(state, action);\n\n    case actionTypes.TCHAT:\n      return tchat(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mehel-ka/Desktop/Hypertube/src/store/reducer/auth.js"],"names":["actionTypes","updateObject","initialState","token","userId","error","loading","modal","photo","toolbar","tchat","authStart","state","action","authSuccess","idToken","authFail","authLogout","value","reducer","type","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","PHOTO","TOOLBAR","TCHAT"],"mappings":"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","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false,\n    modal: false,\n    photo: null,\n    toolbar:false,\n    tchat: false\n  };\n  const authStart = ( state, action ) => {\n    return updateObject( state, { error: null, loading: true } );\n  };\n  const authSuccess = (state, action) => {\n    return updateObject( state, { \n        token: action.idToken,\n        userId: action.userId,\n        error: null,\n        loading: false,\n        modal: true\n     } );\n  };\n  const authFail = (state, action) => {\n    return updateObject( state, {\n        error: action.error,\n        loading: false\n    });\n  }\n\n  const authLogout = (state) => {\n    return updateObject(state, {\n        token: null,\n        userId: null\n    });\n};\n\nconst tchat = (state, action) => {\n  return updateObject(state, {\n    tchat : action.value\n  });\n}\n\nconst toolbar = (state,action) => {\n  return updateObject(state, {\n      toolbar: action.toolbar\n  });\n};\n\nconst photo = (state, action) => {\n  return updateObject(state, {\n    photo : action.photo\n});\n}\n\n\n  const reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state);\n        case actionTypes.PHOTO: return photo(state, action);\n        case actionTypes.TOOLBAR: return toolbar(state, action);\n        case actionTypes.TCHAT: return tchat(state, action);\n        default:\n            return state;\n    }\n  };\n  export default reducer;"]},"metadata":{},"sourceType":"module"}