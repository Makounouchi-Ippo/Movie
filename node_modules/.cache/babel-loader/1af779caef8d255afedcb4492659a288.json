{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nconst initialState = {\n  movie: [],\n  loading: false,\n  error: null,\n  page: 1,\n  hasmore: true,\n  inputValue: '',\n  selectedOption: {\n    Genre: {\n      value: null,\n      label: 'Genre'\n    },\n    Years: {\n      value: null,\n      label: 'Years'\n    },\n    SortBy: {\n      value: null,\n      label: 'SortBy'\n    }\n  },\n  searchBarNoResult: 1,\n  nameScrolling: '',\n  setButton: false,\n  movieDetail: null,\n  youtubeKey_release: null\n};\n\nconst movieBegin = state => {\n  return updateObject(state, {\n    loading: true,\n    error: null\n  });\n};\n\nconst movieSearchInput = (state, action) => {\n  return updateObject(state, {\n    loading: false,\n    movie: action.movie,\n    searchBarNoResult: action.data,\n    nameScrolling: 'searchInput',\n    inputValue: action.inputValue\n  });\n};\n\nconst moviePopular = (state, action) => {\n  return updateObject(state, {\n    loading: false,\n    movie: [...state.movie, ...action.movie],\n    nameScrolling: 'popular'\n  });\n};\n\nconst movieFiltre = (state, action) => {\n  return updateObject(state, {\n    loading: false,\n    movie: action.movie,\n    searchBarNoResult: action.data,\n    selectedOption: action.filtreValue,\n    nameScrolling: 'filtre'\n  });\n};\n\nconst InfiniteScrollMovie = (state, action) => {\n  return updateObject(state, {\n    loading: false,\n    movie: [...state.movie, ...action.movie],\n    page: state.page + 1\n  });\n};\n\nconst clearMovie = (state, action) => {\n  return updateObject(state, {\n    movie: [],\n    page: 1\n  });\n};\n\nconst pageInitial = (state, action) => {\n  return updateObject(state, {\n    page: 1\n  });\n};\n\nconst movieDetail = (state, action) => {\n  return updateObject(state, {\n    loading: false,\n    movieDetail: action.movieDetail,\n    youtubeKey_release: action.youtubeKey_release\n  });\n};\n\nconst movieFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.MOVIE_BEGIN:\n      return movieBegin(state, action);\n\n    case actionTypes.MOVIE_SEARCH_INPUT:\n      return movieSearchInput(state, action);\n\n    case actionTypes.MOVIE_POPULAR:\n      return moviePopular(state, action);\n\n    case actionTypes.MOVIE_FILTRE:\n      return movieFiltre(state, action);\n\n    case actionTypes.MOVIE_FAIL:\n      return movieFail(state, action);\n\n    case actionTypes.INFINITE_SCROLL:\n      return InfiniteScrollMovie(state, action);\n\n    case actionTypes.CLEAR_MOVIE:\n      return clearMovie(state, action);\n\n    case actionTypes.PAGE_INITIAL:\n      return pageInitial(state, action);\n\n    case actionTypes.MOVIE_DETAIL:\n      return movieDetail(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mehel-ka/netflix/src/store/reducer/movieSearch.js"],"names":["actionTypes","updateObject","initialState","movie","loading","error","page","hasmore","inputValue","selectedOption","Genre","value","label","Years","SortBy","searchBarNoResult","nameScrolling","setButton","movieDetail","youtubeKey_release","movieBegin","state","movieSearchInput","action","data","moviePopular","movieFiltre","filtreValue","InfiniteScrollMovie","clearMovie","pageInitial","movieFail","reducer","type","MOVIE_BEGIN","MOVIE_SEARCH_INPUT","MOVIE_POPULAR","MOVIE_FILTRE","MOVIE_FAIL","INFINITE_SCROLL","CLEAR_MOVIE","PAGE_INITIAL","MOVIE_DETAIL"],"mappings":"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","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    movie: [],\n    loading: false,\n    error: null,\n    page: 1,\n    hasmore: true,\n    inputValue:'',\n    selectedOption: {\n      Genre: {value: null, label: 'Genre'}, \n      Years: {value: null , label: 'Years'},\n      SortBy: {value: null, label: 'SortBy'}\n  },\n    searchBarNoResult:1,\n    nameScrolling: '',\n    setButton: false,\n    movieDetail: null,\n    youtubeKey_release: null\n  };\n  \n  const movieBegin = (state) => {\n    return updateObject( state, {\n        loading: true,\n        error: null\n     } );\n  };\n\n  const movieSearchInput = (state, action) => {\n       return updateObject( state, {\n        loading: false,\n        movie: action.movie,\n        searchBarNoResult: action.data,\n        nameScrolling: 'searchInput',\n        inputValue:action.inputValue\n     } );\n  };\n\n  const moviePopular = (state, action) => {\n    return updateObject( state, {\n        loading: false,\n        movie: [...state.movie,...action.movie],\n        nameScrolling: 'popular'\n     } );\n  };\n\n  const movieFiltre = (state, action) => {\n    return updateObject( state, {\n        loading: false,\n        movie: action.movie,\n        searchBarNoResult: action.data,\n        selectedOption: action.filtreValue,\n        nameScrolling: 'filtre'\n     } );\n  };\n\n  const InfiniteScrollMovie = (state, action) => {\n    return updateObject( state, {\n      loading: false,\n      movie: [...state.movie,...action.movie],\n      page: state.page+1,\n     } );\n  };\n\n  const clearMovie = (state, action) => {\n    return updateObject( state, {\n      movie: [],\n      page:1\n     } );\n  };\n\n  const pageInitial = (state, action) => {\n    return updateObject( state, {\n      page:1\n     } );\n  };\n\n\n  const movieDetail = (state, action) => {\n    return updateObject( state, {\n      loading: false,\n      movieDetail:action.movieDetail,\n       youtubeKey_release: action.youtubeKey_release\n     } );\n  };\n\n\n  const movieFail = (state, action) => {\n    return updateObject( state, {\n        error: action.error,\n    });\n  }\n\n\n\n  const reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.MOVIE_BEGIN: return movieBegin(state,action);\n        case actionTypes.MOVIE_SEARCH_INPUT: return movieSearchInput(state, action);\n        case actionTypes.MOVIE_POPULAR: return moviePopular(state, action);\n        case actionTypes.MOVIE_FILTRE: return movieFiltre(state, action);\n        case actionTypes.MOVIE_FAIL: return movieFail(state, action);\n        case actionTypes.INFINITE_SCROLL: return InfiniteScrollMovie(state,action);\n        case actionTypes.CLEAR_MOVIE: return clearMovie(state,action);\n        case actionTypes.PAGE_INITIAL: return pageInitial(state,action);\n        case actionTypes.MOVIE_DETAIL: return movieDetail(state,action);\n        default:\n            return state;\n    }\n  };\n  export default reducer;"]},"metadata":{},"sourceType":"module"}